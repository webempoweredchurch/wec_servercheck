<?php

/***************************************************************
* Copyright notice
*
* (c) 2006 Foundation for Evangelism (info@evangelize.org)
* All rights reserved
*
* This file is part of the Web-Empowered Church (WEC) ministry of the
* Foundation for Evangelism (http://evangelize.org). The WEC is developing 
* TYPO3-based free software for churches around the world. Our desire 
* use the Internet to help offer new life through Jesus Christ. Please
* see http://WebEmpoweredChurch.org/Jesus.
*
* You can redistribute this file and/or modify it under the terms of the 
* GNU General Public License as published by the Free Software Foundation; 
* either version 2 of the License, or (at your option) any later version.
*
* The GNU General Public License can be found at
* http://www.gnu.org/copyleft/gpl.html.
*
* This file is distributed in the hope that it will be useful for ministry,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* This copyright notice MUST APPEAR in all copies of the file!
***************************************************************/


	//-----------------------------------
	//|			Controllers				|
	//-----------------------------------
		
	
	/**
	 * ModuleController, simple keeps a list of all the test modules.
	 *
	 * 
	 * @author Web-Empowered Church Team <developer@webempoweredchurch.org>
	 **/
	class ModuleController {
	
		var $modules;
	
		/**
		 * PHP4 constructor.
		 **/
		function ModuleController() {
			$this->__construct();
		}

		/**
		 * PHP5 constructor for this class.
		 *
		 **/
		function __construct() {
			$this->modules = array();
		}
			
		/**
		 * Registers all the test modules inside the controller for easy access.
		 *
		 * @return void
		 **/
	 	function register($module) {
			$this->modules[] = $module;
		}
		
		/**
		 * Returns all the registered modules.
		 *
		 * @return Array
		 **/
		function getModules() {
			return $this->modules;
		}
	}
	
	$mc = new ModuleController();



	//-----------------------------------
	//|			Output Renderers		|
	//-----------------------------------
	
	/**
	 * Renders the output of the test results. Can be replace to change output format.
	 *
	 * 
	 * @author Web-Empowered Church Team <developer@webempoweredchurch.org>
	 **/
	class RenderOutput {
	
		/**
		 * Table row.
		 **/
		var $ROW = '<tr><td>%s</td><td><pre>%s</pre></td><td>%s</td></tr>';

		/**
		 * Table title.
		 **/
		var $TITLE = "<th>%s</th>";
		
		/**
		 * Renders the module results.
		 *
		 * @return void
		 **/
		function render($module) {
			$output = $module->getOutput();
			$title = $module->getTitle();
			
			$show = sprintf($this->TITLE, $title);k
			foreach($output as $key => $value) {
				$show .= sprintf($this->ROW, $key, $value['value'], $value['status']);
			}
			
			return $show;
		}
	} 
	
	$renderer = new RenderOutput();
	
	
	//-----------------------------------
	//|			Test Modules			|
	//-----------------------------------
	
	
	/**
	 * Abstract class Module, blueprint for test modules.
	 *
	 * 
	 * @author Web-Empowered Church Team <developer@webempoweredchurch.org>
	 **/
	class Module {

		var $output;
		var $title;

		/**
		 * PHP4 constructor.
		 *
		 * @return void
		 **/
		function Module() {
			$this->__construct();
		}

		/**
		 * PHP5 constructor for this class.
		 *
		 * @return void
		 **/
		function __construct() {
			$this->output = array();
			$this->check();
		}

		/**
		 * Does the actual checking and saves the ouput in the global variable.
		 *
		 * @return String
		 **/
		function check() {
			die("Please override this function in your class.");
		}
		
		/**
		 * Gets the title of the test.
		 *
		 * @return void
		 **/
		function getTitle() {
			return $this->title;
		}
		
		/**
		 * Returns the output generated by this test.
		 *
		 * @return Array
		 **/
		function getOutput() {
			return $this->output;
		}

		/**
		 * Displays the output for this test.
		 * 
		 * @return void
		 **/
		function display() {
			$content = '<th>' . $this->title . '</th>';
			foreach($this->output as $row) {
				$content .= $row . "\n";
			}
			return $content;
		}

		/**
		 * Adds another row to the output table
		 *
		 * @return void
		 **/
		function add($name, $value, $recommendation = 'N/A') {
			$this->output[$name] = array('value' => $value, 'status' => $recommendation);
		}
	}
	
	
	/**
	 * Sample Test
	 *
	 * 
	 * @author Web-Empowered Church Team <developer@webempoweredchurch.org>
	 **/
	class Test extends Module {
	
		function __construct() {
			parent::__construct();
			
			$this->title = "Version Info";
		}
		
		function check() {
			
			$serverInfo = $_SERVER['SERVER_SOFTWARE'];
			$items = explode(' ', $serverInfo);
			foreach($items as $item) {
				if(strpos($item, '/') !== false) {
					$sItem = explode('/', $item);
					$this->add($sItem[0], $sItem[1], "N/A");
				} else {
					$item = str_replace('(', '', $item);
					$item = str_replace(')', '', $item);
					$this->add('OS', $item);
				}
			}
		}
	}
	// register the above class with our controller
	$mc->register('Test');
	
	
	//-----------------------------------
	//|			Nitty Gritty			|
	//-----------------------------------
	
	
	echo '<table>';	
	foreach($mc->getModules() as $module) {
		$test = new $module;
		echo $renderer->render($test);
	}
	echo '</table>';
?>